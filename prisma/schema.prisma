// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
  engineType = "binary"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

enum Role {
  USER
  STAFF
  COORD
  CONCELHO
  ADMIN
}

enum EstadoCivil {
  SOLTEIRO
  CASADO
  DIVORCIADO
  VIUVO
  UNIAO_ESTAVEL
}

enum TamanhoCamiseta {
  PP
  P
  M
  G
  GG
  XGG
}

model User {
  id        String             @id @default(cuid())
  email     String             @unique
  password  String
  createdAt DateTime           @default(now())
  updatedAt DateTime           @updatedAt
  role      Role               @default(USER)
  
  // Dados Pessoais
  nomeCompleto        String?
  cpf                 String?           @unique
  dataNascimento      DateTime?
  estadoCivil         EstadoCivil?
  tamanhoCamiseta     TamanhoCamiseta?
  profissao           String?
  telefone            String?
  contatoEmergencia   String?
  telefoneEmergencia  String?
  cidade              String?
  
  // Ficha de Saúde
  portadorDoenca      String?
  alergiaIntolerancia String?
  medicacaoUso        String?
  restricaoAlimentar  String?
  planoSaude          String?
  operadora           String?
  numeroPlano         String?
  
  // Termos e Condições
  termo1              Boolean           @default(false)
  termo2              Boolean           @default(false)
  termo3              Boolean           @default(false)
  
  // Relações
  Sessions  Sessions[]
  
  @@map("users")
}

model Sessions {
  id        String   @id @default(cuid())
  userId    String
  token     String
  expiresAt DateTime
  valid     Boolean  @default(true)
  createdAt DateTime @default(now())
  User      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("sessions")
}
